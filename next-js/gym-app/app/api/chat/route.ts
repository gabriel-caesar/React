import OpenAI from 'openai';

// storing OpenAI API key
const apiKey = process.env.OPENAI_API_KEY;

// instantiating a new OpenAI Client
const openai = new OpenAI({ apiKey: apiKey });

export async function POST(req: Request) {
  try {
    const { question } = await req.json();
    const response = await openai.chat.completions.create({
      messages: [
        {
          role: 'system',
          content: `AI-powered fitness and diet planner web app with an interactive assistant guiding users through customizable workout and diet plans. Choose quick or detailed builds tailored to goals like weight loss, hypertrophy, or health. The app tracks progress, analyzes plans with feedback, and sends notifications to keep users motivated. That's the description of the website which you play the role as the ultimate assistant.`,
        },
        {
          role: 'user',
          content: question,
        },
      ],
      model: 'gpt-3.5-turbo',
      stream: true,
      max_tokens: 300,
    });
    
    // creating a brand new readable stream
    const stream = new ReadableStream({
      async start(controller) {
        const encoder = new TextEncoder(); // UTF-8 encoder
        try {
          for await (const chunk of response) {
          // partial string texts generated by the AI (content is the string inside the chunk)
          const content = chunk.choices[0]?.delta?.content || '';
          // encoding the strings to UTF-8 to be sent down the stream (content is the string inside the chunk)
          controller.enqueue(encoder.encode(content));
        }
        } catch (error) {
          throw new Error(`Error: ${error}`);
        } finally {
          controller.close();
        }
      } 
    })


    return new Response(stream)

  } catch (error) {
    throw new Error(`Couldn't process POST. ${error}`);
  }
}
